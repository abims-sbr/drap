[SCHEDULER]
type = sge    # This value can be 'local' or 'sge'
local_cpu = 6 # The number of available cpu for local scheduler (Not used if type = sge)

[SOFTWARES] # Softwares called by the workflow
bedtools
blastn
bl2seq
blat
bwa
cd-hit
cd-hit-est
cutadapt
dc
exonerate
express
fastq_illumina_filter
generate_plot.py # BUSCO package
getorf
insilico_read_normalization.pl # Trinity package
interleave-reads.py # Khmer package
normalize-by-median.py # Khmer package
oases
parallel
perl
python
rsync
run_BUSCO.py
samtools
seqclean
split-paired-reads.py # Khmer package
STAR
tgicl
TransDecoder.LongOrfs
TransDecoder.Predict
transrate
trim_galore
Trinity
vecscreen
velveth
velvetg

[PATH] # Folders added to the PATH

[ENV] # Commands to execute to set the environnement (i.e. module load)

[DATABASE] # External data sources
# Data available at:
# ftp://ftp.ncbi.nlm.nih.gov/pub/kitts/adaptors_for_screening_euks.fa
# ftp://ftp.ncbi.nlm.nih.gov/pub/kitts/contam_in_euks.fa.gz
# ftp://ftp.ncbi.nlm.nih.gov/pub/kitts/rrna.gz
# ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/mito.nt.gz
# index fasta files with: makeblastdb -in <fasta> -dbtype nucl
adaptors_for_screening_euks = /path/to/adaptors_for_screening_euks.fa
contam_in_euks = /path/to/contam_in_euks.fa
mito = /path/to/mito.nt
rrna = /path/to/rrna

[SOFTWARE CONFIGURATION] # options of softwares called by the workflow
n_cpu = 6 # maximum number of CPU cores used by one software in the workflow
oases_ram = 100
trinity_grid_module = GenotoulGridRunner
busco_lineage_directory = /path/to/busco_directory
star_genome_generate_ram = 64
star_genome_generate_cpu = $n_cpu
star_genome_sa_index = 14
runAssessment_ram = 100

[SGE CONFIGURATION] # configuration SGE 
pe_smp = parallel_smp  # parallel environment
default_queue = workq
mem_queue = hypermemq
node_max_mem = 240

[SGE RESOURCES] # resources requested for workflow specific task or step
preprocess_res = -R y -pe $pe_smp $n_cpu # resources requested in --no-norm mode
normalize_res = -R y -pe $pe_smp $n_cpu -l mem=%MEM%G,h_vmem=%H_VMEM%G
oases_res = -R y -l mem=%MEM%G,h_vmem=%H_VMEM%G
trinity_1_res = -R y -pe $pe_smp $n_cpu -l mem=%MEM%G,h_vmem=%H_VMEM%G
trinity_2_res = -R y -l mem=4G,h_vmem=8G
clustering_res = -R y -pe $pe_smp $n_cpu -l mem=8G,h_vmem=16G
asm_res = -R y -pe $pe_smp $n_cpu
rmbt_editing_res = -R y -pe $pe_smp $n_cpu -l mem=8G,h_vmem=16G
postprocess_res = -R y -pe $pe_smp $n_cpu -l mem=16G,h_vmem=24G
meta_cluster_orf_res = -R y -pe $pe_smp $n_cpu
meta_cluster_contig_res = -R y -pe $pe_smp $n_cpu
meta_index_res = -R y -pe $pe_smp $n_cpu
meta_filter_res = -R y -l mem=16G,h_vmem=32G
meta_postprocess_res = -R y -pe $pe_smp $n_cpu -l mem=16G,h_vmem=24G
samtools_idx_res = -R y -l mem=16G,h_vmem=32G
bwa_map_res = -l mem=8G,h_vmem=16G
star_idx_res = -R y -pe $pe_smp $n_cpu -l mem=8G,h_vmem=8G
star_map_res = -l mem=8G,h_vmem=16G
